/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RefundEscrow, RefundEscrowInterface } from "../RefundEscrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "beneficiary_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "RefundsClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "RefundsEnabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiaryWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "close",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "refundee",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payee",
        type: "address",
      },
    ],
    name: "depositsOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enableRefunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum RefundEscrow.State",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "withdrawalAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200169938038062001699833981810160405281019062000037919062000268565b620000576200004b6200013260201b60201c565b6200013a60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000c9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c09062000321565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506000600260006101000a81548160ff0219169083600281111562000126576200012562000343565b5b02179055505062000372565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002308262000203565b9050919050565b620002428162000223565b81146200024e57600080fd5b50565b600081519050620002628162000237565b92915050565b600060208284031215620002815762000280620001fe565b5b6000620002918482850162000251565b91505092915050565b600082825260208201905092915050565b7f526566756e64457363726f773a2062656e65666963696172792069732074686560008201527f207a65726f206164647265737300000000000000000000000000000000000000602082015250565b600062000309602d836200029a565b91506200031682620002ab565b604082019050919050565b600060208201905081810360008301526200033c81620002fa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60805161130b6200038e6000396000610275015261130b6000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101825780639af6549a146101ad578063c19d93fb146101c4578063e3a9db1a146101ef578063f2fde38b1461022c578063f340fa0114610255576100a7565b806338af3eed146100ac57806343d726d6146100d757806351cff8d9146100ee578063685ca19414610117578063715018a6146101545780638c52dc411461016b575b600080fd5b3480156100b857600080fd5b506100c1610271565b6040516100ce9190610b3b565b60405180910390f35b3480156100e357600080fd5b506100ec610299565b005b3480156100fa57600080fd5b5061011560048036038101906101109190610b87565b610367565b005b34801561012357600080fd5b5061013e60048036038101906101399190610bf2565b6103bb565b60405161014b9190610c3a565b60405180910390f35b34801561016057600080fd5b506101696103f3565b005b34801561017757600080fd5b50610180610407565b005b34801561018e57600080fd5b506101976104d6565b6040516101a49190610c64565b60405180910390f35b3480156101b957600080fd5b506101c26104ff565b005b3480156101d057600080fd5b506101d961059e565b6040516101e69190610cf6565b60405180910390f35b3480156101fb57600080fd5b5061021660048036038101906102119190610bf2565b6105b5565b6040516102239190610d2a565b60405180910390f35b34801561023857600080fd5b50610253600480360381019061024e9190610bf2565b6105fe565b005b61026f600480360381019061026a9190610bf2565b610681565b005b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6102a16106fb565b600060028111156102b5576102b4610c7f565b5b6102bd61059e565b60028111156102cf576102ce610c7f565b5b1461030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690610dc8565b60405180910390fd5b60028060006101000a81548160ff0219169083600281111561033457610333610c7f565b5b02179055507f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f60405160405180910390a1565b610370816103bb565b6103af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a690610e5a565b60405180910390fd5b6103b881610779565b50565b6000600160028111156103d1576103d0610c7f565b5b6103d961059e565b60028111156103eb576103ea610c7f565b5b149050919050565b6103fb6106fb565b6104056000610885565b565b61040f6106fb565b6000600281111561042357610422610c7f565b5b61042b61059e565b600281111561043d5761043c610c7f565b5b1461047d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047490610eec565b60405180910390fd5b6001600260006101000a81548160ff021916908360028111156104a3576104a2610c7f565b5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60028081111561051257610511610c7f565b5b61051a61059e565b600281111561052c5761052b610c7f565b5b1461056c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056390610f7e565b60405180910390fd5b61059c47610578610271565b73ffffffffffffffffffffffffffffffffffffffff1661094990919063ffffffff16565b565b6000600260009054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106066106fb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610675576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066c90611010565b60405180910390fd5b61067e81610885565b50565b6000600281111561069557610694610c7f565b5b61069d61059e565b60028111156106af576106ae610c7f565b5b146106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e6906110a2565b60405180910390fd5b6106f881610a3d565b50565b610703610af2565b73ffffffffffffffffffffffffffffffffffffffff166107216104d6565b73ffffffffffffffffffffffffffffffffffffffff1614610777576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076e9061110e565b60405180910390fd5b565b6107816106fb565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610833818373ffffffffffffffffffffffffffffffffffffffff1661094990919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516108799190610d2a565b60405180910390a25050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8047101561098c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109839061117a565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516109b2906111cb565b60006040518083038185875af1925050503d80600081146109ef576040519150601f19603f3d011682016040523d82523d6000602084013e6109f4565b606091505b5050905080610a38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2f90611252565b60405180910390fd5b505050565b610a456106fb565b600034905080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a9991906112a1565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c482604051610ae69190610d2a565b60405180910390a25050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2582610afa565b9050919050565b610b3581610b1a565b82525050565b6000602082019050610b506000830184610b2c565b92915050565b600080fd5b610b6481610b1a565b8114610b6f57600080fd5b50565b600081359050610b8181610b5b565b92915050565b600060208284031215610b9d57610b9c610b56565b5b6000610bab84828501610b72565b91505092915050565b6000610bbf82610afa565b9050919050565b610bcf81610bb4565b8114610bda57600080fd5b50565b600081359050610bec81610bc6565b92915050565b600060208284031215610c0857610c07610b56565b5b6000610c1684828501610bdd565b91505092915050565b60008115159050919050565b610c3481610c1f565b82525050565b6000602082019050610c4f6000830184610c2b565b92915050565b610c5e81610bb4565b82525050565b6000602082019050610c796000830184610c55565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610cbf57610cbe610c7f565b5b50565b6000819050610cd082610cae565b919050565b6000610ce082610cc2565b9050919050565b610cf081610cd5565b82525050565b6000602082019050610d0b6000830184610ce7565b92915050565b6000819050919050565b610d2481610d11565b82525050565b6000602082019050610d3f6000830184610d1b565b92915050565b600082825260208201905092915050565b7f526566756e64457363726f773a2063616e206f6e6c7920636c6f73652077686960008201527f6c65206163746976650000000000000000000000000000000000000000000000602082015250565b6000610db2602983610d45565b9150610dbd82610d56565b604082019050919050565b60006020820190508181036000830152610de181610da5565b9050919050565b7f436f6e646974696f6e616c457363726f773a207061796565206973206e6f742060008201527f616c6c6f77656420746f20776974686472617700000000000000000000000000602082015250565b6000610e44603383610d45565b9150610e4f82610de8565b604082019050919050565b60006020820190508181036000830152610e7381610e37565b9050919050565b7f526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726560008201527f66756e6473207768696c65206163746976650000000000000000000000000000602082015250565b6000610ed6603283610d45565b9150610ee182610e7a565b604082019050919050565b60006020820190508181036000830152610f0581610ec9565b9050919050565b7f526566756e64457363726f773a2062656e65666963696172792063616e206f6e60008201527f6c79207769746864726177207768696c6520636c6f7365640000000000000000602082015250565b6000610f68603883610d45565b9150610f7382610f0c565b604082019050919050565b60006020820190508181036000830152610f9781610f5b565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610ffa602683610d45565b915061100582610f9e565b604082019050919050565b6000602082019050818103600083015261102981610fed565b9050919050565b7f526566756e64457363726f773a2063616e206f6e6c79206465706f736974207760008201527f68696c6520616374697665000000000000000000000000000000000000000000602082015250565b600061108c602b83610d45565b915061109782611030565b604082019050919050565b600060208201905081810360008301526110bb8161107f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006110f8602083610d45565b9150611103826110c2565b602082019050919050565b60006020820190508181036000830152611127816110eb565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b6000611164601d83610d45565b915061116f8261112e565b602082019050919050565b6000602082019050818103600083015261119381611157565b9050919050565b600081905092915050565b50565b60006111b560008361119a565b91506111c0826111a5565b600082019050919050565b60006111d6826111a8565b9150819050919050565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b600061123c603a83610d45565b9150611247826111e0565b604082019050919050565b6000602082019050818103600083015261126b8161122f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112ac82610d11565b91506112b783610d11565b92508282019050808211156112cf576112ce611272565b5b9291505056fea264697066735822122081a86c8985c9a82eca682f5589a27daa3a5ada5b79acf25b5525f5c4ee5207f864736f6c63430008110033";

export class RefundEscrow__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    beneficiary_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RefundEscrow> {
    return super.deploy(beneficiary_, overrides || {}) as Promise<RefundEscrow>;
  }
  getDeployTransaction(
    beneficiary_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(beneficiary_, overrides || {});
  }
  attach(address: string): RefundEscrow {
    return super.attach(address) as RefundEscrow;
  }
  connect(signer: Signer): RefundEscrow__factory {
    return super.connect(signer) as RefundEscrow__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RefundEscrowInterface {
    return new utils.Interface(_abi) as RefundEscrowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RefundEscrow {
    return new Contract(address, _abi, signerOrProvider) as RefundEscrow;
  }
}
