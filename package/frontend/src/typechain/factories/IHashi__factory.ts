/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IHashi, IHashiInterface } from "../IHashi";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "domain",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "contract IOracleAdapter[]",
        name: "oracleAdapters",
        type: "address[]",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IHashi__factory {
  static readonly abi = _abi;
  static createInterface(): IHashiInterface {
    return new utils.Interface(_abi) as IHashiInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IHashi {
    return new Contract(address, _abi, signerOrProvider) as IHashi;
  }
}
