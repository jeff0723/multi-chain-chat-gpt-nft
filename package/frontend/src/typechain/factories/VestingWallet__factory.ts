/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VestingWallet, VestingWalletInterface } from "../VestingWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiaryAddress",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "startTimestamp",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "durationSeconds",
        type: "uint64",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EtherReleased",
    type: "event",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040526040516200153f3803806200153f8339818101604052810190620000299190620001bf565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200009b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200009290620002a2565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508167ffffffffffffffff1660a08167ffffffffffffffff16815250508067ffffffffffffffff1660c08167ffffffffffffffff1681525050505050620002c4565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001428262000115565b9050919050565b620001548162000135565b81146200016057600080fd5b50565b600081519050620001748162000149565b92915050565b600067ffffffffffffffff82169050919050565b62000199816200017a565b8114620001a557600080fd5b50565b600081519050620001b9816200018e565b92915050565b600080600060608486031215620001db57620001da62000110565b5b6000620001eb8682870162000163565b9350506020620001fe86828701620001a8565b92505060406200021186828701620001a8565b9150509250925092565b600082825260208201905092915050565b7f56657374696e6757616c6c65743a2062656e6566696369617279206973207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b60006200028a602a836200021b565b915062000297826200022c565b604082019050919050565b60006020820190508181036000830152620002bd816200027b565b9050919050565b60805160a05160c05161124b620002f460003960006102e001526000610588015260006103d9015261124b6000f3fe6080604052600436106100a05760003560e01c806386d1a69f1161006457806386d1a69f146101a557806396132521146101bc5780639852595c146101e7578063a3f8eace14610224578063be9a655514610261578063fbccedae1461028c576100a7565b80630a17b06b146100ac5780630fb5a6b4146100e9578063191655871461011457806338af3eed1461013d578063810ec23b14610168576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610ac6565b6102b7565b6040516100e09190610b0c565b60405180910390f35b3480156100f557600080fd5b506100fe6102dc565b60405161010b9190610b0c565b60405180910390f35b34801561012057600080fd5b5061013b60048036038101906101369190610b85565b61030e565b005b34801561014957600080fd5b506101526103d5565b60405161015f9190610bc1565b60405180910390f35b34801561017457600080fd5b5061018f600480360381019061018a9190610bdc565b6103fd565b60405161019c9190610b0c565b60405180910390f35b3480156101b157600080fd5b506101ba61049d565b005b3480156101c857600080fd5b506101d161050c565b6040516101de9190610b0c565b60405180910390f35b3480156101f357600080fd5b5061020e60048036038101906102099190610b85565b610515565b60405161021b9190610b0c565b60405180910390f35b34801561023057600080fd5b5061024b60048036038101906102469190610b85565b61055e565b6040516102589190610b0c565b60405180910390f35b34801561026d57600080fd5b50610276610584565b6040516102839190610b0c565b60405180910390f35b34801561029857600080fd5b506102a16105b6565b6040516102ae9190610b0c565b60405180910390f35b60006102d56102c461050c565b476102cf9190610c4b565b836105d8565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b60006103198261055e565b905080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461036a9190610c4b565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b826040516103b79190610b0c565b60405180910390a26103d1826103cb6103d5565b83610672565b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600061049561040b84610515565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104449190610bc1565b602060405180830381865afa158015610461573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104859190610cab565b61048f9190610c4b565b836105d8565b905092915050565b60006104a76105b6565b9050806000808282546104ba9190610c4b565b925050819055507fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b816040516104f09190610b0c565b60405180910390a16105096105036103d5565b826106f8565b50565b60008054905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061056982610515565b61057383426103fd565b61057d9190610cd8565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b60006105c061050c565b6105c9426102b7565b6105d39190610cd8565b905090565b60006105e2610584565b8267ffffffffffffffff1610156105fc576000905061066c565b6106046102dc565b61060c610584565b6106169190610c4b565b8267ffffffffffffffff16111561062f5782905061066c565b6106376102dc565b61063f610584565b8367ffffffffffffffff166106549190610cd8565b8461065f9190610d0c565b6106699190610d7d565b90505b92915050565b6106f38363a9059cbb60e01b8484604051602401610691929190610dae565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506107ec565b505050565b8047101561073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073290610e34565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161076190610e85565b60006040518083038185875af1925050503d806000811461079e576040519150601f19603f3d011682016040523d82523d6000602084013e6107a3565b606091505b50509050806107e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107de90610f0c565b60405180910390fd5b505050565b600061084e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108b49092919063ffffffff16565b905060008151148061087057508080602001905181019061086f9190610f64565b5b6108af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a690611003565b60405180910390fd5b505050565b60606108c384846000856108cc565b90509392505050565b606082471015610911576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090890611095565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161093a919061111b565b60006040518083038185875af1925050503d8060008114610977576040519150601f19603f3d011682016040523d82523d6000602084013e61097c565b606091505b509150915061098d87838387610999565b92505050949350505050565b606083156109fb5760008351036109f3576109b385610a0e565b6109f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e99061117e565b60405180910390fd5b5b829050610a06565b610a058383610a31565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610a445781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7891906111f3565b60405180910390fd5b600080fd5b600067ffffffffffffffff82169050919050565b610aa381610a86565b8114610aae57600080fd5b50565b600081359050610ac081610a9a565b92915050565b600060208284031215610adc57610adb610a81565b5b6000610aea84828501610ab1565b91505092915050565b6000819050919050565b610b0681610af3565b82525050565b6000602082019050610b216000830184610afd565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5282610b27565b9050919050565b610b6281610b47565b8114610b6d57600080fd5b50565b600081359050610b7f81610b59565b92915050565b600060208284031215610b9b57610b9a610a81565b5b6000610ba984828501610b70565b91505092915050565b610bbb81610b47565b82525050565b6000602082019050610bd66000830184610bb2565b92915050565b60008060408385031215610bf357610bf2610a81565b5b6000610c0185828601610b70565b9250506020610c1285828601610ab1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5682610af3565b9150610c6183610af3565b9250828201905080821115610c7957610c78610c1c565b5b92915050565b610c8881610af3565b8114610c9357600080fd5b50565b600081519050610ca581610c7f565b92915050565b600060208284031215610cc157610cc0610a81565b5b6000610ccf84828501610c96565b91505092915050565b6000610ce382610af3565b9150610cee83610af3565b9250828203905081811115610d0657610d05610c1c565b5b92915050565b6000610d1782610af3565b9150610d2283610af3565b9250828202610d3081610af3565b91508282048414831517610d4757610d46610c1c565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d8882610af3565b9150610d9383610af3565b925082610da357610da2610d4e565b5b828204905092915050565b6000604082019050610dc36000830185610bb2565b610dd06020830184610afd565b9392505050565b600082825260208201905092915050565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b6000610e1e601d83610dd7565b9150610e2982610de8565b602082019050919050565b60006020820190508181036000830152610e4d81610e11565b9050919050565b600081905092915050565b50565b6000610e6f600083610e54565b9150610e7a82610e5f565b600082019050919050565b6000610e9082610e62565b9150819050919050565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b6000610ef6603a83610dd7565b9150610f0182610e9a565b604082019050919050565b60006020820190508181036000830152610f2581610ee9565b9050919050565b60008115159050919050565b610f4181610f2c565b8114610f4c57600080fd5b50565b600081519050610f5e81610f38565b92915050565b600060208284031215610f7a57610f79610a81565b5b6000610f8884828501610f4f565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610fed602a83610dd7565b9150610ff882610f91565b604082019050919050565b6000602082019050818103600083015261101c81610fe0565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061107f602683610dd7565b915061108a82611023565b604082019050919050565b600060208201905081810360008301526110ae81611072565b9050919050565b600081519050919050565b60005b838110156110de5780820151818401526020810190506110c3565b60008484015250505050565b60006110f5826110b5565b6110ff8185610e54565b935061110f8185602086016110c0565b80840191505092915050565b600061112782846110ea565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611168601d83610dd7565b915061117382611132565b602082019050919050565b600060208201905081810360008301526111978161115b565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b60006111c58261119e565b6111cf8185610dd7565b93506111df8185602086016110c0565b6111e8816111a9565b840191505092915050565b6000602082019050818103600083015261120d81846111ba565b90509291505056fea264697066735822122066397511a85aaf50f3dccb8424feceb3029fbdc8453e3b4e83cbc334957cbeca64736f6c63430008110033";

export class VestingWallet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    beneficiaryAddress: string,
    startTimestamp: BigNumberish,
    durationSeconds: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<VestingWallet> {
    return super.deploy(
      beneficiaryAddress,
      startTimestamp,
      durationSeconds,
      overrides || {}
    ) as Promise<VestingWallet>;
  }
  getDeployTransaction(
    beneficiaryAddress: string,
    startTimestamp: BigNumberish,
    durationSeconds: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      beneficiaryAddress,
      startTimestamp,
      durationSeconds,
      overrides || {}
    );
  }
  attach(address: string): VestingWallet {
    return super.attach(address) as VestingWallet;
  }
  connect(signer: Signer): VestingWallet__factory {
    return super.connect(signer) as VestingWallet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingWalletInterface {
    return new utils.Interface(_abi) as VestingWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VestingWallet {
    return new Contract(address, _abi, signerOrProvider) as VestingWallet;
  }
}
